<Page
    x:Class="SheetWork.Views.Pages.SheetTablePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sh="http://sheet.com/xaml"
    xmlns:pages="clr-namespace:SheetWork.Views.Pages"
    xmlns:validators="clr-namespace:SheetWork.Views.ValidationRules"
    Title="SheetTablePage"
    d:DataContext="{d:DesignInstance pages:SheetTablePage,
                                     IsDesignTimeCreatable=False}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    sh:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
    sh:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    mc:Ignorable="d"
    >
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <sh:ThemesDictionary Theme="Light"/>
                <sh:ControlsDictionary />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Page.Resources>
    <Grid Margin="32">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>
        <sh:DataGrid Grid.Column="0"
                    ItemsSource="{Binding ViewModel.ProjectSheets, UpdateSourceTrigger=PropertyChanged}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    IsReadOnly="True">

            <sh:DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Resources>
                        <SolidColorBrush x:Key="ReadOnlyTextBrush" Color="#B3DCDCDC"/>
                    </Style.Resources>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource ReadOnlyTextBrush}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </sh:DataGrid.RowStyle>
            <sh:DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Copy" 
                              Command="{Binding ViewModel.CopySelectedSheetCommand}"
                              CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"
                              />
                    <MenuItem Header="Rename" 
                              Command="{Binding ViewModel.RenameSelectedSheetCommand}"
                              CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"
                    />
                    <MenuItem Header="Delete" Command="{Binding ViewModel.DeleteSelectedSheetCommand}"
                              CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"
                    />
                </ContextMenu>
            </sh:DataGrid.ContextMenu>
        </sh:DataGrid>
        <Grid Grid.Column="1"
              Grid.Row="0" Margin="10,0,0,0">
            <StackPanel >
                <Label Content="Sheet Properties" FontSize="18" HorizontalAlignment="Center"></Label>
                <Label Content="Rename" FontSize="16" HorizontalAlignment="Center"></Label>
                <Label Content="Suffix" FontSize="14" HorizontalAlignment="Left" Margin="5,0,0,0"></Label>
                <0sh:TextBox Text="{Binding ViewModel.Suffix, UpdateSourceTrigger=PropertyChanged}"></0sh:TextBox>
                <Label Content="Prefix" FontSize="14" HorizontalAlignment="Left" Margin="5,10,0,0"></Label>
                <sh:TextBox Text="{Binding ViewModel.Prefix, UpdateSourceTrigger=PropertyChanged}"></sh:TextBox>
                <Label Content="Sheet Number" FontSize="14" HorizontalAlignment="Left" Margin="5,10,0,0"></Label>
                <sh:TextBox>
                    <sh:TextBox.Text>
                        <Binding Path="ViewModel.Number" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validators:IsSheetNumberExist/>
                            </Binding.ValidationRules>
                        </Binding>
                    </sh:TextBox.Text>
                    <Validation.ErrorTemplate>
                        <ControlTemplate>
                            <DockPanel>
                                <Border BorderBrush="Red" BorderThickness="1">
                                    <AdornedElementPlaceholder x:Name="controlWithError"/>
                                </Border>
                                <TextBlock Foreground="Red" FontSize="20" FontFamily="Segoe UI" Margin="3,0,0,0" >!</TextBlock>
                            </DockPanel>
                        </ControlTemplate>
                    </Validation.ErrorTemplate>
                </sh:TextBox>
            </StackPanel>

            <sh:Button VerticalAlignment="Bottom" 
                       HorizontalAlignment="Center"
                       Content="Export To Excel"
                       Command="{Binding ViewModel.ExportToExcelCommand}" >

            </sh:Button>
        </Grid>
       
        
    </Grid>
</Page>
